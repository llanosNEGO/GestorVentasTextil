// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyectoFinal.Data;

#nullable disable

namespace proyectoFinal.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250630205110_3")]
    partial class _3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("proyectoFinal.Models.Categoria", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCategoria"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idCategoria");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCliente"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("telefono")
                        .HasColumnType("int");

                    b.HasKey("idCliente");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.ComprasProveedor", b =>
                {
                    b.Property<int>("idCompraProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCompraProveedor"));

                    b.Property<int>("MedioPago")
                        .HasColumnType("int");

                    b.Property<int>("Proveedor")
                        .HasColumnType("int");

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("fecha_registro")
                        .HasColumnType("date");

                    b.Property<int>("idProveedor")
                        .HasColumnType("int");

                    b.Property<int>("idmedioPago")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("idCompraProveedor");

                    b.HasIndex("idProveedor");

                    b.HasIndex("idmedioPago");

                    b.ToTable("ComprasProveedores", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.DetalleCompra", b =>
                {
                    b.Property<int>("idDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetalleCompra"));

                    b.Property<int>("Producto")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("idCompras")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("precioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("talla")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idDetalleCompra");

                    b.HasIndex("idCompras");

                    b.HasIndex("idProducto");

                    b.ToTable("DetalleCompra", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.DetallePedido", b =>
                {
                    b.Property<int>("idDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetallePedido"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idpedido")
                        .HasColumnType("int");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<decimal>("precioUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("subtotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("idDetallePedido");

                    b.HasIndex("idpedido");

                    b.HasIndex("idproducto");

                    b.ToTable("DetallePedido", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.DetalleVenta", b =>
                {
                    b.Property<int>("idDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetalle"));

                    b.Property<int>("Produto")
                        .HasColumnType("int");

                    b.Property<int>("Venta")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<int>("idVenta")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_unitario")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("subtotal")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("idDetalle");

                    b.HasIndex("idProducto");

                    b.HasIndex("idVenta");

                    b.ToTable("DetalleVenta", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.Inventario", b =>
                {
                    b.Property<int>("idInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idInventario"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Producto")
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<string>("talla")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idInventario");

                    b.HasIndex("idProducto");

                    b.ToTable("Inventario", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.MedioPago", b =>
                {
                    b.Property<int>("idMedioPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMedioPago"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idMedioPago");

                    b.ToTable("MedioPago", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.Pedido", b =>
                {
                    b.Property<int>("idPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPedido"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("EstadoPedido")
                        .HasColumnType("int");

                    b.Property<string>("direccionEntrega")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("fechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("fechaPedido")
                        .HasColumnType("date");

                    b.Property<int?>("idcliente")
                        .HasColumnType("int");

                    b.Property<decimal>("subtotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("idPedido");

                    b.HasIndex("idcliente");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("descripcionProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("idCategoria")
                        .HasColumnType("int");

                    b.Property<string>("nombreProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("precioProducto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("idCategoria");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.Proveedor", b =>
                {
                    b.Property<int>("idProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProveedor"));

                    b.Property<string>("nombreEmpresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idProveedor");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.Rol", b =>
                {
                    b.Property<int>("idRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRol"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("fecha_registro")
                        .HasColumnType("date");

                    b.Property<int>("idRol")
                        .HasColumnType("int");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idUsuario");

                    b.HasIndex("idRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("proyectoFinal.Models.Venta", b =>
                {
                    b.Property<int>("idVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idVenta"));

                    b.Property<int>("Cliente")
                        .HasColumnType("int");

                    b.Property<int>("MedioPago")
                        .HasColumnType("int");

                    b.Property<int?>("Pedido")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<DateOnly>("fecha_registro")
                        .HasColumnType("date");

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.Property<int>("idMedioPago")
                        .HasColumnType("int");

                    b.Property<int?>("idpedido")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("idVenta");

                    b.HasIndex("idCliente");

                    b.HasIndex("idMedioPago");

                    b.HasIndex("idpedido");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("proyectoFinal.Models.ComprasProveedor", b =>
                {
                    b.HasOne("proyectoFinal.Models.Proveedor", "proveedor")
                        .WithMany("comprasProveedors")
                        .HasForeignKey("idProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.MedioPago", "medioPago")
                        .WithMany("comprasProveedores")
                        .HasForeignKey("idmedioPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("medioPago");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("proyectoFinal.Models.DetalleCompra", b =>
                {
                    b.HasOne("proyectoFinal.Models.ComprasProveedor", "ComprasProveedor")
                        .WithMany("detalleCompras")
                        .HasForeignKey("idCompras")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Producto", "productos")
                        .WithMany("detalleCompras")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComprasProveedor");

                    b.Navigation("productos");
                });

            modelBuilder.Entity("proyectoFinal.Models.DetallePedido", b =>
                {
                    b.HasOne("proyectoFinal.Models.Pedido", "pedido")
                        .WithMany("detalles")
                        .HasForeignKey("idpedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Producto", "producto")
                        .WithMany("detallePedidos")
                        .HasForeignKey("idproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("proyectoFinal.Models.DetalleVenta", b =>
                {
                    b.HasOne("proyectoFinal.Models.Producto", "Producto")
                        .WithMany("detalleVentas")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Venta", "venta")
                        .WithMany("detalles")
                        .HasForeignKey("idVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("proyectoFinal.Models.Inventario", b =>
                {
                    b.HasOne("proyectoFinal.Models.Producto", "producto")
                        .WithMany("inventario")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");
                });

            modelBuilder.Entity("proyectoFinal.Models.Pedido", b =>
                {
                    b.HasOne("proyectoFinal.Models.Cliente", "cliente")
                        .WithMany("pedidos")
                        .HasForeignKey("idcliente")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("proyectoFinal.Models.Producto", b =>
                {
                    b.HasOne("proyectoFinal.Models.Categoria", "categoria")
                        .WithMany("Productos")
                        .HasForeignKey("idCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("proyectoFinal.Models.Usuario", b =>
                {
                    b.HasOne("proyectoFinal.Models.Rol", "rol")
                        .WithMany("usuarios")
                        .HasForeignKey("idRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("proyectoFinal.Models.Venta", b =>
                {
                    b.HasOne("proyectoFinal.Models.Cliente", "cliente")
                        .WithMany("ventas")
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.MedioPago", "medioPago")
                        .WithMany("ventas")
                        .HasForeignKey("idMedioPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Pedido", "pedido")
                        .WithMany("ventas")
                        .HasForeignKey("idpedido")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("cliente");

                    b.Navigation("medioPago");

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("proyectoFinal.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Cliente", b =>
                {
                    b.Navigation("pedidos");

                    b.Navigation("ventas");
                });

            modelBuilder.Entity("proyectoFinal.Models.ComprasProveedor", b =>
                {
                    b.Navigation("detalleCompras");
                });

            modelBuilder.Entity("proyectoFinal.Models.MedioPago", b =>
                {
                    b.Navigation("comprasProveedores");

                    b.Navigation("ventas");
                });

            modelBuilder.Entity("proyectoFinal.Models.Pedido", b =>
                {
                    b.Navigation("detalles");

                    b.Navigation("ventas");
                });

            modelBuilder.Entity("proyectoFinal.Models.Producto", b =>
                {
                    b.Navigation("detalleCompras");

                    b.Navigation("detallePedidos");

                    b.Navigation("detalleVentas");

                    b.Navigation("inventario");
                });

            modelBuilder.Entity("proyectoFinal.Models.Proveedor", b =>
                {
                    b.Navigation("comprasProveedors");
                });

            modelBuilder.Entity("proyectoFinal.Models.Rol", b =>
                {
                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("proyectoFinal.Models.Venta", b =>
                {
                    b.Navigation("detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
